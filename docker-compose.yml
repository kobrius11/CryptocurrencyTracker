version: '3.7'
services:
  crypto_tracker:
    build: .
    image: python:crypto_tracker
    container_name: crypto_tracker.dev
    tty: true
    stdin_open: true
    restart: always
    ports:
      - 8000:8000
    volumes:
      - ./crypto_tracker:/app
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    depends_on:
      - db
      - redis
    links:
      - db:postgres
    command: >
      bash -c "python wait_for_postgres.py &&
               python manage.py migrate &&
               python manage.py collectstatic --noinput &&
               gunicorn crypto_tracker.wsgi --bind 0.0.0.0:8000"

    environment:
      - DEBUG=1
      - CELERY_BROKER=redis://redis:6379/2
      - CELERY_BACKEND=redis://redis:6379/3
  
  # daphne_service:
  #   build: .
  #   image: python:crypto_tracker
  #   container_name: daphne
  #   tty: true
  #   stdin_open: true
  #   restart: always
  #   ports:
  #     - 8001:8001
  #   volumes:
  #     - ./crypto_tracker:/app
  #   depends_on:
  #     - db
  #     - redis
  #   links:
  #     - db:postgres
  #   command: >
  #     bash -c "python wait_for_postgres.py &&
  #              python manage.py migrate &&
  #              daphne -b 0.0.0.0 -p 8001 crypto_tracker.asgi:application"

  db:
    image: postgres
    container_name: tracker_database.db
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./dbdata:/var/lib/postgresql/data
    env_file:
      - ./crypto_tracker/crypto_tracker/local_settings.py
  
  nginx:
    build: ./nginx/.
    image: nginx:crypto_tracker
    container_name: crypto_tracker.nginx
    restart: always
    ports:
      - 80:80
    links:
      - crypto_tracker:crypto_tracker
    volumes:
      - ./crypto_tracker/media:/app/media
      - ./crypto_tracker/static:/app/static

  redis:
    container_name: redis
    image: redis:latest
    expose:
      - 6379
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf  # Path to your Redis configuration file
    command: redis-server /usr/local/etc/redis/redis.conf

  celery_worker:
    build: .
    image: python:crypto_tracker
    container_name: crypto_tracker.worker
    restart: always
    command: >
      bash -c "celery -A crypto_tracker worker -B --pool=prefork --concurrency=12 --autoscale=12,3 -l info"
               
    volumes:
      - ./crypto_tracker:/app
    depends_on:
      - db
      - redis
    links:
      - db:postgres
